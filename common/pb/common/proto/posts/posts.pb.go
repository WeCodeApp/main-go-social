// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: posts/posts.proto

package posts

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreatePostRequest is the request for creating a new post
type CreatePostRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UserId is the ID of the user creating the post
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Content is the content of the post
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// Visibility is the visibility of the post (public or private)
	Visibility string `protobuf:"bytes,3,opt,name=visibility,proto3" json:"visibility,omitempty"`
	// GroupId is the ID of the group if the post is in a group (optional)
	GroupId string `protobuf:"bytes,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// Media is an array of media URLs (optional)
	Media         []string `protobuf:"bytes,5,rep,name=media,proto3" json:"media,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePostRequest) Reset() {
	*x = CreatePostRequest{}
	mi := &file_posts_posts_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostRequest) ProtoMessage() {}

func (x *CreatePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostRequest.ProtoReflect.Descriptor instead.
func (*CreatePostRequest) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePostRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreatePostRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreatePostRequest) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

func (x *CreatePostRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CreatePostRequest) GetMedia() []string {
	if x != nil {
		return x.Media
	}
	return nil
}

// GetPostRequest is the request for retrieving a post
type GetPostRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PostId is the ID of the post
	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	// UserId is the ID of the user making the request (optional)
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPostRequest) Reset() {
	*x = GetPostRequest{}
	mi := &file_posts_posts_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostRequest) ProtoMessage() {}

func (x *GetPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostRequest.ProtoReflect.Descriptor instead.
func (*GetPostRequest) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{1}
}

func (x *GetPostRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *GetPostRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// GetPostsRequest is the request for retrieving posts
type GetPostsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UserId is the ID of the user making the request (optional)
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// AuthorId is the ID of the user whose posts to retrieve (optional)
	AuthorId string `protobuf:"bytes,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	// GroupId is the ID of the group whose posts to retrieve (optional)
	GroupId string `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// Visibility is the visibility filter (optional)
	Visibility string `protobuf:"bytes,4,opt,name=visibility,proto3" json:"visibility,omitempty"`
	// Page is the page number for pagination
	Page int32 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	// Limit is the number of posts per page
	Limit         int32 `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPostsRequest) Reset() {
	*x = GetPostsRequest{}
	mi := &file_posts_posts_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostsRequest) ProtoMessage() {}

func (x *GetPostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostsRequest.ProtoReflect.Descriptor instead.
func (*GetPostsRequest) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{2}
}

func (x *GetPostsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetPostsRequest) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *GetPostsRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetPostsRequest) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

func (x *GetPostsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPostsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// UpdatePostRequest is the request for updating a post
type UpdatePostRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PostId is the ID of the post
	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	// UserId is the ID of the user updating the post
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Content is the updated content of the post
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// Visibility is the updated visibility of the post (optional)
	Visibility string `protobuf:"bytes,4,opt,name=visibility,proto3" json:"visibility,omitempty"`
	// Media is an array of updated media URLs (optional)
	Media         []string `protobuf:"bytes,5,rep,name=media,proto3" json:"media,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePostRequest) Reset() {
	*x = UpdatePostRequest{}
	mi := &file_posts_posts_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePostRequest) ProtoMessage() {}

func (x *UpdatePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePostRequest.ProtoReflect.Descriptor instead.
func (*UpdatePostRequest) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{3}
}

func (x *UpdatePostRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *UpdatePostRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdatePostRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdatePostRequest) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

func (x *UpdatePostRequest) GetMedia() []string {
	if x != nil {
		return x.Media
	}
	return nil
}

// DeletePostRequest is the request for deleting a post
type DeletePostRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PostId is the ID of the post
	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	// UserId is the ID of the user deleting the post
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePostRequest) Reset() {
	*x = DeletePostRequest{}
	mi := &file_posts_posts_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostRequest) ProtoMessage() {}

func (x *DeletePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostRequest.ProtoReflect.Descriptor instead.
func (*DeletePostRequest) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{4}
}

func (x *DeletePostRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *DeletePostRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// AddCommentRequest is the request for adding a comment to a post
type AddCommentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PostId is the ID of the post
	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	// UserId is the ID of the user adding the comment
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Content is the content of the comment
	Content       string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCommentRequest) Reset() {
	*x = AddCommentRequest{}
	mi := &file_posts_posts_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentRequest) ProtoMessage() {}

func (x *AddCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentRequest.ProtoReflect.Descriptor instead.
func (*AddCommentRequest) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{5}
}

func (x *AddCommentRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *AddCommentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// GetCommentsRequest is the request for retrieving comments for a post
type GetCommentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PostId is the ID of the post
	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	// Page is the page number for pagination
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Limit is the number of comments per page
	Limit         int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentsRequest) Reset() {
	*x = GetCommentsRequest{}
	mi := &file_posts_posts_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsRequest) ProtoMessage() {}

func (x *GetCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsRequest.ProtoReflect.Descriptor instead.
func (*GetCommentsRequest) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{6}
}

func (x *GetCommentsRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *GetCommentsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCommentsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// DeleteCommentRequest is the request for deleting a comment
type DeleteCommentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CommentId is the ID of the comment
	CommentId string `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	// UserId is the ID of the user deleting the comment
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// PostId is the ID of the post
	PostId        string `protobuf:"bytes,3,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_posts_posts_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *DeleteCommentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteCommentRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

// LikePostRequest is the request for liking a post
type LikePostRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PostId is the ID of the post
	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	// UserId is the ID of the user liking the post
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikePostRequest) Reset() {
	*x = LikePostRequest{}
	mi := &file_posts_posts_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikePostRequest) ProtoMessage() {}

func (x *LikePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikePostRequest.ProtoReflect.Descriptor instead.
func (*LikePostRequest) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{8}
}

func (x *LikePostRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *LikePostRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// UnlikePostRequest is the request for unliking a post
type UnlikePostRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PostId is the ID of the post
	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	// UserId is the ID of the user unliking the post
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlikePostRequest) Reset() {
	*x = UnlikePostRequest{}
	mi := &file_posts_posts_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlikePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikePostRequest) ProtoMessage() {}

func (x *UnlikePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikePostRequest.ProtoReflect.Descriptor instead.
func (*UnlikePostRequest) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{9}
}

func (x *UnlikePostRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *UnlikePostRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// PostResponse is the response containing a post
type PostResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PostId is the ID of the post
	PostId string `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	// AuthorId is the ID of the user who created the post
	AuthorId string `protobuf:"bytes,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	// AuthorName is the name of the user who created the post
	AuthorName string `protobuf:"bytes,3,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
	// AuthorAvatar is the avatar URL of the user who created the post
	AuthorAvatar string `protobuf:"bytes,4,opt,name=author_avatar,json=authorAvatar,proto3" json:"author_avatar,omitempty"`
	// Content is the content of the post
	Content string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	// Visibility is the visibility of the post
	Visibility string `protobuf:"bytes,6,opt,name=visibility,proto3" json:"visibility,omitempty"`
	// GroupId is the ID of the group if the post is in a group
	GroupId string `protobuf:"bytes,7,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// GroupName is the name of the group if the post is in a group
	GroupName string `protobuf:"bytes,8,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	// Media is an array of media URLs
	Media []string `protobuf:"bytes,9,rep,name=media,proto3" json:"media,omitempty"`
	// LikesCount is the number of likes on the post
	LikesCount int32 `protobuf:"varint,10,opt,name=likes_count,json=likesCount,proto3" json:"likes_count,omitempty"`
	// CommentsCount is the number of comments on the post
	CommentsCount int32 `protobuf:"varint,11,opt,name=comments_count,json=commentsCount,proto3" json:"comments_count,omitempty"`
	// IsLiked indicates if the requesting user has liked the post
	IsLiked bool `protobuf:"varint,12,opt,name=is_liked,json=isLiked,proto3" json:"is_liked,omitempty"`
	// CreatedAt is the timestamp when the post was created
	CreatedAt string `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// UpdatedAt is the timestamp when the post was last updated
	UpdatedAt     string `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostResponse) Reset() {
	*x = PostResponse{}
	mi := &file_posts_posts_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostResponse) ProtoMessage() {}

func (x *PostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostResponse.ProtoReflect.Descriptor instead.
func (*PostResponse) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{10}
}

func (x *PostResponse) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *PostResponse) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *PostResponse) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

func (x *PostResponse) GetAuthorAvatar() string {
	if x != nil {
		return x.AuthorAvatar
	}
	return ""
}

func (x *PostResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PostResponse) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

func (x *PostResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *PostResponse) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *PostResponse) GetMedia() []string {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *PostResponse) GetLikesCount() int32 {
	if x != nil {
		return x.LikesCount
	}
	return 0
}

func (x *PostResponse) GetCommentsCount() int32 {
	if x != nil {
		return x.CommentsCount
	}
	return 0
}

func (x *PostResponse) GetIsLiked() bool {
	if x != nil {
		return x.IsLiked
	}
	return false
}

func (x *PostResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PostResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// GetPostsResponse is the response containing posts
type GetPostsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Posts is an array of posts
	Posts []*PostResponse `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	// TotalCount is the total number of posts
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Page is the current page number
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// TotalPages is the total number of pages
	TotalPages    int32 `protobuf:"varint,4,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPostsResponse) Reset() {
	*x = GetPostsResponse{}
	mi := &file_posts_posts_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostsResponse) ProtoMessage() {}

func (x *GetPostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostsResponse.ProtoReflect.Descriptor instead.
func (*GetPostsResponse) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{11}
}

func (x *GetPostsResponse) GetPosts() []*PostResponse {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *GetPostsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetPostsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPostsResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

// CommentResponse is the response containing a comment
type CommentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CommentId is the ID of the comment
	CommentId string `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	// PostId is the ID of the post
	PostId string `protobuf:"bytes,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	// AuthorId is the ID of the user who created the comment
	AuthorId string `protobuf:"bytes,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	// AuthorName is the name of the user who created the comment
	AuthorName string `protobuf:"bytes,4,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
	// AuthorAvatar is the avatar URL of the user who created the comment
	AuthorAvatar string `protobuf:"bytes,5,opt,name=author_avatar,json=authorAvatar,proto3" json:"author_avatar,omitempty"`
	// Content is the content of the comment
	Content string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	// CreatedAt is the timestamp when the comment was created
	CreatedAt     string `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentResponse) Reset() {
	*x = CommentResponse{}
	mi := &file_posts_posts_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentResponse) ProtoMessage() {}

func (x *CommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentResponse.ProtoReflect.Descriptor instead.
func (*CommentResponse) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{12}
}

func (x *CommentResponse) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *CommentResponse) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *CommentResponse) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *CommentResponse) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

func (x *CommentResponse) GetAuthorAvatar() string {
	if x != nil {
		return x.AuthorAvatar
	}
	return ""
}

func (x *CommentResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// GetCommentsResponse is the response containing comments
type GetCommentsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Comments is an array of comments
	Comments []*CommentResponse `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	// TotalCount is the total number of comments
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Page is the current page number
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// TotalPages is the total number of pages
	TotalPages    int32 `protobuf:"varint,4,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentsResponse) Reset() {
	*x = GetCommentsResponse{}
	mi := &file_posts_posts_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsResponse) ProtoMessage() {}

func (x *GetCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsResponse.ProtoReflect.Descriptor instead.
func (*GetCommentsResponse) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{13}
}

func (x *GetCommentsResponse) GetComments() []*CommentResponse {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *GetCommentsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetCommentsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCommentsResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

// DeletePostResponse is the response for deleting a post
type DeletePostResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success indicates if the post was successfully deleted
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePostResponse) Reset() {
	*x = DeletePostResponse{}
	mi := &file_posts_posts_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostResponse) ProtoMessage() {}

func (x *DeletePostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostResponse.ProtoReflect.Descriptor instead.
func (*DeletePostResponse) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{14}
}

func (x *DeletePostResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// DeleteCommentResponse is the response for deleting a comment
type DeleteCommentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success indicates if the comment was successfully deleted
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentResponse) Reset() {
	*x = DeleteCommentResponse{}
	mi := &file_posts_posts_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentResponse) ProtoMessage() {}

func (x *DeleteCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentResponse.ProtoReflect.Descriptor instead.
func (*DeleteCommentResponse) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// LikePostResponse is the response for liking a post
type LikePostResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success indicates if the post was successfully liked
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// LikesCount is the updated number of likes on the post
	LikesCount    int32 `protobuf:"varint,2,opt,name=likes_count,json=likesCount,proto3" json:"likes_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikePostResponse) Reset() {
	*x = LikePostResponse{}
	mi := &file_posts_posts_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikePostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikePostResponse) ProtoMessage() {}

func (x *LikePostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikePostResponse.ProtoReflect.Descriptor instead.
func (*LikePostResponse) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{16}
}

func (x *LikePostResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LikePostResponse) GetLikesCount() int32 {
	if x != nil {
		return x.LikesCount
	}
	return 0
}

// UnlikePostResponse is the response for unliking a post
type UnlikePostResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success indicates if the post was successfully unliked
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// LikesCount is the updated number of likes on the post
	LikesCount    int32 `protobuf:"varint,2,opt,name=likes_count,json=likesCount,proto3" json:"likes_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlikePostResponse) Reset() {
	*x = UnlikePostResponse{}
	mi := &file_posts_posts_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlikePostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikePostResponse) ProtoMessage() {}

func (x *UnlikePostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_posts_posts_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikePostResponse.ProtoReflect.Descriptor instead.
func (*UnlikePostResponse) Descriptor() ([]byte, []int) {
	return file_posts_posts_proto_rawDescGZIP(), []int{17}
}

func (x *UnlikePostResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnlikePostResponse) GetLikesCount() int32 {
	if x != nil {
		return x.LikesCount
	}
	return 0
}

var File_posts_posts_proto protoreflect.FileDescriptor

const file_posts_posts_proto_rawDesc = "" +
	"\n" +
	"\x11posts/posts.proto\x12\x05posts\"\x97\x01\n" +
	"\x11CreatePostRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x1e\n" +
	"\n" +
	"visibility\x18\x03 \x01(\tR\n" +
	"visibility\x12\x19\n" +
	"\bgroup_id\x18\x04 \x01(\tR\agroupId\x12\x14\n" +
	"\x05media\x18\x05 \x03(\tR\x05media\"B\n" +
	"\x0eGetPostRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\tR\x06postId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\xac\x01\n" +
	"\x0fGetPostsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tauthor_id\x18\x02 \x01(\tR\bauthorId\x12\x19\n" +
	"\bgroup_id\x18\x03 \x01(\tR\agroupId\x12\x1e\n" +
	"\n" +
	"visibility\x18\x04 \x01(\tR\n" +
	"visibility\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x06 \x01(\x05R\x05limit\"\x95\x01\n" +
	"\x11UpdatePostRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\tR\x06postId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x1e\n" +
	"\n" +
	"visibility\x18\x04 \x01(\tR\n" +
	"visibility\x12\x14\n" +
	"\x05media\x18\x05 \x03(\tR\x05media\"E\n" +
	"\x11DeletePostRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\tR\x06postId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"_\n" +
	"\x11AddCommentRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\tR\x06postId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"W\n" +
	"\x12GetCommentsRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\tR\x06postId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"g\n" +
	"\x14DeleteCommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x17\n" +
	"\apost_id\x18\x03 \x01(\tR\x06postId\"C\n" +
	"\x0fLikePostRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\tR\x06postId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"E\n" +
	"\x11UnlikePostRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\tR\x06postId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\xb5\x03\n" +
	"\fPostResponse\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\tR\x06postId\x12\x1b\n" +
	"\tauthor_id\x18\x02 \x01(\tR\bauthorId\x12\x1f\n" +
	"\vauthor_name\x18\x03 \x01(\tR\n" +
	"authorName\x12#\n" +
	"\rauthor_avatar\x18\x04 \x01(\tR\fauthorAvatar\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12\x1e\n" +
	"\n" +
	"visibility\x18\x06 \x01(\tR\n" +
	"visibility\x12\x19\n" +
	"\bgroup_id\x18\a \x01(\tR\agroupId\x12\x1d\n" +
	"\n" +
	"group_name\x18\b \x01(\tR\tgroupName\x12\x14\n" +
	"\x05media\x18\t \x03(\tR\x05media\x12\x1f\n" +
	"\vlikes_count\x18\n" +
	" \x01(\x05R\n" +
	"likesCount\x12%\n" +
	"\x0ecomments_count\x18\v \x01(\x05R\rcommentsCount\x12\x19\n" +
	"\bis_liked\x18\f \x01(\bR\aisLiked\x12\x1d\n" +
	"\n" +
	"created_at\x18\r \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x0e \x01(\tR\tupdatedAt\"\x93\x01\n" +
	"\x10GetPostsResponse\x12)\n" +
	"\x05posts\x18\x01 \x03(\v2\x13.posts.PostResponseR\x05posts\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1f\n" +
	"\vtotal_pages\x18\x04 \x01(\x05R\n" +
	"totalPages\"\xe5\x01\n" +
	"\x0fCommentResponse\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\x12\x17\n" +
	"\apost_id\x18\x02 \x01(\tR\x06postId\x12\x1b\n" +
	"\tauthor_id\x18\x03 \x01(\tR\bauthorId\x12\x1f\n" +
	"\vauthor_name\x18\x04 \x01(\tR\n" +
	"authorName\x12#\n" +
	"\rauthor_avatar\x18\x05 \x01(\tR\fauthorAvatar\x12\x18\n" +
	"\acontent\x18\x06 \x01(\tR\acontent\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAt\"\x9f\x01\n" +
	"\x13GetCommentsResponse\x122\n" +
	"\bcomments\x18\x01 \x03(\v2\x16.posts.CommentResponseR\bcomments\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1f\n" +
	"\vtotal_pages\x18\x04 \x01(\x05R\n" +
	"totalPages\".\n" +
	"\x12DeletePostResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"1\n" +
	"\x15DeleteCommentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"M\n" +
	"\x10LikePostResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1f\n" +
	"\vlikes_count\x18\x02 \x01(\x05R\n" +
	"likesCount\"O\n" +
	"\x12UnlikePostResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1f\n" +
	"\vlikes_count\x18\x02 \x01(\x05R\n" +
	"likesCount2\x90\x05\n" +
	"\vPostService\x12;\n" +
	"\n" +
	"CreatePost\x12\x18.posts.CreatePostRequest\x1a\x13.posts.PostResponse\x125\n" +
	"\aGetPost\x12\x15.posts.GetPostRequest\x1a\x13.posts.PostResponse\x12;\n" +
	"\bGetPosts\x12\x16.posts.GetPostsRequest\x1a\x17.posts.GetPostsResponse\x12;\n" +
	"\n" +
	"UpdatePost\x12\x18.posts.UpdatePostRequest\x1a\x13.posts.PostResponse\x12A\n" +
	"\n" +
	"DeletePost\x12\x18.posts.DeletePostRequest\x1a\x19.posts.DeletePostResponse\x12>\n" +
	"\n" +
	"AddComment\x12\x18.posts.AddCommentRequest\x1a\x16.posts.CommentResponse\x12D\n" +
	"\vGetComments\x12\x19.posts.GetCommentsRequest\x1a\x1a.posts.GetCommentsResponse\x12J\n" +
	"\rDeleteComment\x12\x1b.posts.DeleteCommentRequest\x1a\x1c.posts.DeleteCommentResponse\x12;\n" +
	"\bLikePost\x12\x16.posts.LikePostRequest\x1a\x17.posts.LikePostResponse\x12A\n" +
	"\n" +
	"UnlikePost\x12\x18.posts.UnlikePostRequest\x1a\x19.posts.UnlikePostResponseB\x14Z\x12common/proto/postsb\x06proto3"

var (
	file_posts_posts_proto_rawDescOnce sync.Once
	file_posts_posts_proto_rawDescData []byte
)

func file_posts_posts_proto_rawDescGZIP() []byte {
	file_posts_posts_proto_rawDescOnce.Do(func() {
		file_posts_posts_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_posts_posts_proto_rawDesc), len(file_posts_posts_proto_rawDesc)))
	})
	return file_posts_posts_proto_rawDescData
}

var file_posts_posts_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_posts_posts_proto_goTypes = []any{
	(*CreatePostRequest)(nil),     // 0: posts.CreatePostRequest
	(*GetPostRequest)(nil),        // 1: posts.GetPostRequest
	(*GetPostsRequest)(nil),       // 2: posts.GetPostsRequest
	(*UpdatePostRequest)(nil),     // 3: posts.UpdatePostRequest
	(*DeletePostRequest)(nil),     // 4: posts.DeletePostRequest
	(*AddCommentRequest)(nil),     // 5: posts.AddCommentRequest
	(*GetCommentsRequest)(nil),    // 6: posts.GetCommentsRequest
	(*DeleteCommentRequest)(nil),  // 7: posts.DeleteCommentRequest
	(*LikePostRequest)(nil),       // 8: posts.LikePostRequest
	(*UnlikePostRequest)(nil),     // 9: posts.UnlikePostRequest
	(*PostResponse)(nil),          // 10: posts.PostResponse
	(*GetPostsResponse)(nil),      // 11: posts.GetPostsResponse
	(*CommentResponse)(nil),       // 12: posts.CommentResponse
	(*GetCommentsResponse)(nil),   // 13: posts.GetCommentsResponse
	(*DeletePostResponse)(nil),    // 14: posts.DeletePostResponse
	(*DeleteCommentResponse)(nil), // 15: posts.DeleteCommentResponse
	(*LikePostResponse)(nil),      // 16: posts.LikePostResponse
	(*UnlikePostResponse)(nil),    // 17: posts.UnlikePostResponse
}
var file_posts_posts_proto_depIdxs = []int32{
	10, // 0: posts.GetPostsResponse.posts:type_name -> posts.PostResponse
	12, // 1: posts.GetCommentsResponse.comments:type_name -> posts.CommentResponse
	0,  // 2: posts.PostService.CreatePost:input_type -> posts.CreatePostRequest
	1,  // 3: posts.PostService.GetPost:input_type -> posts.GetPostRequest
	2,  // 4: posts.PostService.GetPosts:input_type -> posts.GetPostsRequest
	3,  // 5: posts.PostService.UpdatePost:input_type -> posts.UpdatePostRequest
	4,  // 6: posts.PostService.DeletePost:input_type -> posts.DeletePostRequest
	5,  // 7: posts.PostService.AddComment:input_type -> posts.AddCommentRequest
	6,  // 8: posts.PostService.GetComments:input_type -> posts.GetCommentsRequest
	7,  // 9: posts.PostService.DeleteComment:input_type -> posts.DeleteCommentRequest
	8,  // 10: posts.PostService.LikePost:input_type -> posts.LikePostRequest
	9,  // 11: posts.PostService.UnlikePost:input_type -> posts.UnlikePostRequest
	10, // 12: posts.PostService.CreatePost:output_type -> posts.PostResponse
	10, // 13: posts.PostService.GetPost:output_type -> posts.PostResponse
	11, // 14: posts.PostService.GetPosts:output_type -> posts.GetPostsResponse
	10, // 15: posts.PostService.UpdatePost:output_type -> posts.PostResponse
	14, // 16: posts.PostService.DeletePost:output_type -> posts.DeletePostResponse
	12, // 17: posts.PostService.AddComment:output_type -> posts.CommentResponse
	13, // 18: posts.PostService.GetComments:output_type -> posts.GetCommentsResponse
	15, // 19: posts.PostService.DeleteComment:output_type -> posts.DeleteCommentResponse
	16, // 20: posts.PostService.LikePost:output_type -> posts.LikePostResponse
	17, // 21: posts.PostService.UnlikePost:output_type -> posts.UnlikePostResponse
	12, // [12:22] is the sub-list for method output_type
	2,  // [2:12] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_posts_posts_proto_init() }
func file_posts_posts_proto_init() {
	if File_posts_posts_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_posts_posts_proto_rawDesc), len(file_posts_posts_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_posts_posts_proto_goTypes,
		DependencyIndexes: file_posts_posts_proto_depIdxs,
		MessageInfos:      file_posts_posts_proto_msgTypes,
	}.Build()
	File_posts_posts_proto = out.File
	file_posts_posts_proto_goTypes = nil
	file_posts_posts_proto_depIdxs = nil
}
